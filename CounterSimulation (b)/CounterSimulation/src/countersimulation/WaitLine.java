package countersimulation;/** Simulates a waiting line.     @author Frank M. Carrano    @author Timothy M. Henry    @version 4.0*/public class WaitLine{   private QueueInterface<Customer> line;   private int numberOfArrivals;   private int numberServed;   private int totalTimeWaited;   private int totalTransactionTimeLeft;   private int transactionTime;   private int intervalTime;   private int totaltime;     public WaitLine()   {      line = new LinkedQueue<>();      reset();   } // end default constructor   /** Simulates a waiting line with one serving agent.       @param duration  The number of simulated minutes       @param arrivalProbability  A real number between 0 and 1, and the                                  probability that a customer arrives at                                  a given time       @param maxTransactionTime  the longest transaction time for a                                  customer */    public void simulate(int customerNum,int server,int queueNom)   {	   for(int queue=1;queue<=queueNom;queue++) {		   System.out.println("\nQueue: "+queue);		   	   for(int counter=1; counter <= server; counter++) {   		   System.out.println("Counter:"+ counter);		   totalTransactionTimeLeft=0;		         for (int customer = 1; customer <= customerNum; customer++){    	  if(totalTransactionTimeLeft<3600) {    		              transactionTime = 120+ (int)(Math.random() * 480);            intervalTime = 30+ (int)(Math.random()*15);            Customer nextArrival = new Customer(intervalTime, transactionTime, customer);            line.enqueue(nextArrival);            System.out.println("Customer " + customer                                + " enters line at time " + totalTransactionTimeLeft                               + ". Transaction time is " + transactionTime                               + " interval time " + intervalTime);            totalTransactionTimeLeft=transactionTime+totalTransactionTimeLeft+intervalTime;            numberServed++;            totaltime=totaltime+transactionTime+intervalTime;      } // end if    	  totalTimeWaited=totaltime/queue;	 } //end for   } // end simulate  } }   /** Displays summary results of the simulation. */    public void displayResults()   {      System.out.println();      System.out.println("Number served = " + numberServed);      System.out.println("Total time waited  = " + totalTimeWaited);      double averageTime = ((double)totalTimeWaited) / numberServed;      System.out.println("Average total time = " + averageTime);      int leftInLine = numberOfArrivals - numberServed;      System.out.println("Number left in line = " + leftInLine);   } // end displayResults   /** Initializes the simulation. */    public final void reset()   {      line.clear();      numberOfArrivals = 0;      numberServed = 0;      totalTimeWaited = 0;   } // end reset} // end WaitLine